plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
		implementation('io.jsonwebtoken:jjwt:0.12.6')

	// Spring Boot starter per JPA (Jakarta Persistence API)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Spring Boot starter per validazione con Jakarta
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Spring Boot starter per sviluppo API REST
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Spring Security per autenticazione e autorizzazione
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// Lombok per ridurre il boilerplate nel codice
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// DevTools per hot reload in sviluppo
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Driver MySQL per la connessione al database
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'mysql:mysql-connector-java:8.0.26'  // Sostituisci con l'ultima versione

	// Test dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// SpringDoc OpenAPI per la documentazione delle API
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0' 

	// Jakarta Persistence API (JPA) e Jakarta Servlet
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'


}


tasks.named('test') {
	useJUnitPlatform()
}
